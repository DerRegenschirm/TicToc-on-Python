'''TIC TOC GAME'''
#this project is part of "Complete Python Bootcamp: Go from zero to hero in Python 3" course on Udemy

from IPython.display import clear_output #add the library for clear output

#start or repeat
def new_game():
    fill_the_table=[' ',' ',' ',' ',' ',' ',' ',' ', ' '] #будет заполнять таблицу
    keys=['1', '2', '3', '4', '5', '6', '7', '8', '9'] #numbers in table
    win_trio=[[1,4,7],[2,5,8],[3,6,9],[1,2,3],[4,5,6],[7,8,9],[7,5,3],[1,5,9]]  #winning combinations
    i=0 #counter for players steps
    win = False #someone wins || end the game
    new_pos=0
    
    clear_output()
    print('\n Welcome in the game TicToc!')
    print('Just choose your icon and start the game')
    print('You can finish the game by typing "H" \n')


    #1st player is choosing the icon
    xoro=input('Choose the icon. Please print "x" or "o": ')
    if xoro=='x' or xoro=='X':
        xoro='x'
    elif xoro=='o' or xoro=='O' or xoro=='0':
        xoro='o'
    else:
        xoro='x'
        print('Your default icon is "X" \n')
    
    return fill_the_table,keys,win_trio,i,win,new_pos,xoro


#function for printing the table after each iteration
def print_the_table (fill_the_table):
    print('\n {} || {} || {} '.format(fill_the_table[6], fill_the_table[7],fill_the_table[8]))
    print('===||===||===')
    print(' {} || {} || {} '.format(fill_the_table[3], fill_the_table[4],fill_the_table[5]))
    print('===||===||===')
    print(' {} || {} || {} \n'.format(fill_the_table[0], fill_the_table[1],fill_the_table[2]))
    

#add the new position   
def step(fill_the_table,xoro,keys):
    inp=input('Choose the new position for your icon: ')#new position
    
    #inp is not a number
    '''try:
        new_pos=int(inp) #integer position
    except ValueError:
        print('Please type the correct position')
        step(fill_the_table,xoro,keys)
    else:'''
    if inp.lower() not in keys:
        print('Please type the correct position')
        step(fill_the_table,xoro,keys)
    else:
        new_pos=int(inp)
        if fill_the_table[new_pos-1]!=' ':
            print('Current position is already booked ;) Please choose the empty one')
            step(fill_the_table,xoro,keys)
        else:
            fill_the_table[new_pos-1]=xoro 
            keys[new_pos-1]=xoro #tabke with empty and booked coordinates
    return fill_the_table,keys,new_pos
    

#print what player should be next
def text(i):
    if i==0:
        print('\n Welcome on the board! Please choose the coordinate to place you icon')
    elif i%2==0:
        print('Turn for 1st player')
    elif i%2==1 and i<=8:
        print('Turn for 2nd player')
        
        
#do we have the winner    
def check_the_winner(i,xoro,win_trio,new_pos,fill_the_table,win):
    for n1,comb in enumerate(win_trio):
        for n2,item in enumerate(comb):
            if new_pos==item:
                win_trio[n1][n2]=xoro    
                
        if i in range(4,8):
            if win_trio[n1][0]==win_trio[n1][1]==win_trio[n1][2]==xoro:
                win=True
                print("\n CONGRATS! PLAYER {} IS THE WINNER! \n".format(xoro))
                print_the_table(fill_the_table)
                break
    return win


'''
START!

'''
fill_the_table,keys,win_trio,i,win,new_pos,xoro=new_game()

   
#the game is going on until any player print 'H'
while input !='H':
    if i<=8:
        
        if i!=0:
            clear_output()
        text(i)#what player should go
        print_the_table(keys) #positions numbers
        print_the_table(fill_the_table) #empty booked positions
        fill_the_table,keys,new_pos=step(fill_the_table,xoro,keys) #choose the new position
        win=check_the_winner(i,xoro,win_trio,new_pos,fill_the_table,win) #do we have the winner
        print('\n')
        
        
        #next step counter
        i+=1 
        #change the icon
        if xoro=='x':  
            xoro='o'
        else:
            xoro='x'
        
        
    
    elif i>8 and win==False:
        print_the_table(fill_the_table)
        print('Well, I think we have a tie.')
        win=True
        
        
        
    if win==True:
        repeat=input('Do you want to play again? Y/N: ')
        if repeat=='Y' or repeat=='y':
            fill_the_table,keys,win_trio,i,win,new_pos,xoro=new_game()
            
            
        else:
            print('See you soon')
            break


pass

print('Bye! =)')
    
